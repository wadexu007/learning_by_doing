apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: order-pizza
  name: order-pizza
  namespace: exercise
spec:
  replicas: 2
  selector:
    matchLabels:
      app: order-pizza
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
      labels:
        app: order-pizza
    spec:
      containers:
      - env:
        - name: AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: wadexu007/exercise-pizza:1.0.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 40
          timeoutSeconds: 3
        name: app
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 20
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 1
            memory: 1Gi
          requests:
            cpu: 200m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: config-volume
          mountPath: /app/conf/config.json
          subPath: config.json
      volumes:
      - name: config-volume
        configMap:
          name: order-pizza-exercise-config
      tolerations:
      - effect: NoSchedule
        key: app
        operator: Equal
        value: "true"
      terminationGracePeriodSeconds: 20
---
apiVersion: v1
kind: ConfigMap
data:
  config.json: |-
    {    
        "FILE_PATH": "/data/test/",
        "LOG_LEVEL": "INFO",
        "DB_HOST": "127.0.0.1",
        "DB_NAME": "test"
    }
metadata:
  name: order-pizza-exercise-config
  namespace: exercise
---
# order-pizza service in exercise namespace
apiVersion: v1
kind: Service
metadata:
  labels:
    app: order-pizza-svc
  name: order-pizza-svc
  namespace: exercise
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: order-pizza
  type: NodePort