def dir_path = 'Jenkins/k8s_pod_as_build_agent/demo-app-java'
def yaml_path = 'Jenkins/k8s_pod_as_build_agent/_common/build-pod.yaml'

pipeline {
  options {
    timeout(time: 10, unit: 'MINUTES')
    buildDiscarder(logRotator(numToKeepStr: '10', daysToKeepStr: '7'))
  }

  environment {
    DOCKER_HUB_REGISTRY = 'https://index.docker.io/v1/'
    DOCKER_HUB_ACCOUNT = 'wadexu007'
    DOCKER_HUB_CREDS = credentials('wade_test_dockerhub')
  }

  agent {
    kubernetes {
      idleMinutes 3  // how long the pod will live after no jobs have run on it
      yamlFile yaml_path // path to the pod definition relative to the root of our project 
      defaultContainer 'maven'  // define a default container if more than a few stages use it, otherwise default to jnlp container
    }
  }
  stages {

    stage('Init') {
      steps {
        script {
          container('git') {
            sh """git config --global --add safe.directory $WORKSPACE"""
          }
        }
      }
    }

    stage('Compile') {
      steps {  // no container directive is needed as the maven container is the default
        dir(dir_path) {
          sh "mvn clean package"   
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        script {
          dir(dir_path) {
            container('docker') {
                // docker login, Using single-quotes instead of double-quotes when referencing these sensitive environment variables prevents this type of leaking.
                sh 'echo $DOCKER_HUB_CREDS_PSW | docker login -u $DOCKER_HUB_CREDS_USR --password-stdin $DOCKER_HUB_REGISTRY'

                def image_tag = env.BRANCH_NAME + "-" + env.BUILD_NUMBER
                def image_name = env.JOB_NAME.split("/")[0]
                env.PROJECT_IMAGE_WITH_TAG = image_name + ":" + image_tag
                sh 'env'               
                // build image with image tag
                sh """
                docker build -t $PROJECT_IMAGE_WITH_TAG .
                docker tag $PROJECT_IMAGE_WITH_TAG $DOCKER_HUB_ACCOUNT/$PROJECT_IMAGE_WITH_TAG
                """

                // push image_tag to docker hub
                sh """
                docker push $DOCKER_HUB_ACCOUNT/$PROJECT_IMAGE_WITH_TAG
                """
            }
          }
        }
      }
    }
  }
}
